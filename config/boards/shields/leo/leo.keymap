/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible =  "zmk,keymap" ;

           default_layer {
// --------------------------------------------------------------------------------------------------------------------------------
// | ¿ ¡      |  1  |  2  |   3   |  4  |  5  |                   ---                 |  6    |  7    |  8    |  9   | 0    |  ' ? \ +  |
// | TAB      |  Q  |  W  |   E   |  R  |  T  |   (   |           ---         |  )    |  Y    |  U    |  I    |  O   | P    |  ´ ¨ -    |
// | | ° ¬    |  A  |  S  |   D   |  F  |  G  |   [   |           ---         |  ]    |  H    |  J    |  K    |  L   | ;    |   < > *   |
// |SHIFT CAPS|  Z  |  X  |   C   |  V  |  B  | PG_UP | PG_DOWN | --- | HOME  | END   |  N    |  M    |  ,    |  .   | UP   | - _ SHIFT |
// | CRTL     | GUI | ALT |  ESC  |    BKSP   |  DEL  |  LOWER  | --- | RAISE | ENTER |     SPACE     | ALTGR | LEFT | DOWN |   RIGHT   |
            bindings = <
   &kp EQUAL  &kp N1    &kp N2   &kp N3    &kp N4   &kp N5                                              &kp N6 &kp N7 &kp N8     &kp N9    &kp N0          &kp MINUS
   &kp TAB    &kp Q     &kp W    &kp E     &kp R    &kp T  &kp SQT                           &kp BSLH   &kp Y  &kp U  &kp I      &kp O     &kp P           &kp RBKT
   &kp CAPS   &kp A     &kp S    &kp D     &kp F    &kp G  &kp LS(N8)                        &kp LS(N9) &kp H  &kp J  &kp K      &kp L     &kp SEMI        &kp NON_US_BSLH
   &kp LSHFT  &kp Z     &kp X    &kp C     &kp V    &kp B  &kp LCTRL  &kp LALT      &kp LGUI &kp RCTRL  &kp N  &kp M  &kp COMMA  &kp DOT   &kp FSLH        &kp RSHFT
   &mo 2      &kp GRAVE &kp ESC  &kp LEFT  &kp RIGHT       &kp BSPC   &kp DEL       &kp RET  &kp SPACE         &kp UP &kp DOWN   &kp LBKT  &mt RALT K_APP  &mo 2
            >;

        };
        
        
  lower_layer {
// --------------------------------------------------------------------------------------------------------------------------
// | F1    |  F2 |  F3 |  F4   |  F5   |  F6 |                   ---              |  F7 |  F8 |  F9  |  F10 | F11 |  F12  |
// | ESC   |  1  |  2  |   3   |   4   |  5  |   (   |           ---        |  )  |  6  |  7  |   8  |  9   |  0  |  DEL  |
// | CTRL  |  -  |  =  |   [   |   ]   |  \  |   [   |           ---        |  ]  |  *  |  4  |   5  |  6   |  +  |   -   |
// | SHIFT | ESC | GUI | COPY  | PASTE |     | PG_UP | PG_DOWN | --- | HOME | END |  \  |  1  |   2  |  3   | RET |  RET  |
// | CRTL  | ALT | GUI | LOWER |     GUI     | LOWER | SPACE   | --- | DEL  |  0  |    RAISE  | LEFT | DOWN | UP  | RIGHT |
            bindings = <
  &trans  &trans  &trans   &trans   &trans  &trans                                      &trans   &kp KP_NUM &kp LS(N0)  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
  &trans  &trans  &trans   &trans   &trans  &trans   &trans                   &trans    &trans   &kp KP_N7  &kp KP_N8   &kp KP_N9      &kp KP_MINUS     &kp LS(N0)
  &trans  &trans  &trans   &trans   &trans  &trans   &trans                   &trans    &trans   &kp KP_N4  &kp KP_N5   &kp KP_N6      &kp KP_PLUS      &trans
  &trans  &trans  &trans   &trans   &trans  &trans   &trans  &trans   &trans  &trans    &trans   &kp KP_N1  &kp KP_N2   &kp KP_N3      &kp KP_ENTER     &trans 
  &mo 2   &trans  &trans   &trans   &trans           &trans  &trans   &trans  &kp KP_N0          &kp UP     &kp DOWN    &kp KP_DOT     &kp SPACE        &tog 1
            >;
        };

       



 

        
    };
};
